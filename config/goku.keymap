/*
 * Copyright (c) 2024 Quang Nguyen
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

// Layer definitions
#define BASE 0
#define NAV 1
#define SYM 2
#define SYS 3
#define FNS 4
// -----------------

&sk {
	// don't release mods on other mods presses
	ignore-modifiers;
};


/ {
	behaviors {
		// Enables holding the first mod-tap key
		// by performing a tap-release-hold sequence.
		// To use it: "&qt KEYCODE1 KEYCODE2"
		qt: quick_tap {
			compatible = "zmk,behavior-hold-tap";
			#binding-cells = <2>;
			flavor = "hold-preferred";
			tapping-term-ms = <200>;
			quick-tap-ms = <200>;
			bindings = <&kp>, <&kp>;
		};
	};

	macros {

	};

    /*           34 Keys
    ╭──────────────╮ ╭──────────────╮
    │ 0  1  2  3  4│ │ 5  6  7  8  9│
    │10 11 12 13 14│ │15 16 17 18 19│
    │20 21 22 23 24│ │25 26 27 28 29│
    ╰────────╮30 31│ │32 33╭────────╯
             ╰─────╯ ╰─────╯       */

	combos {
		compatible = "zmk,combos";

		combo_shift_l {
            key-positions = <3 13>;
            bindings = <&kp LSHIFT>;
        };

        combo_shift_r {
            key-positions = <6 16>;
            bindings = <&kp LSHIFT>;
        };

        combo_ctrl_l {
            key-positions = <2 12>;
            bindings = <&kp LCTRL>;
        };

        combo_ctrl_r {
            key-positions = <7 17>;
            bindings = <&kp LCTRL>;
        };

        combo_gui_l {
            key-positions = <1 11>;
            bindings = <&kp LGUI>;
        };

        combo_gui_r {
            key-positions = <8 18>;
            bindings = <&kp LGUI>;
        };

        combo_alt_l {
            key-positions = <0 10>;
            bindings = <&kp LALT>;
        };

        combo_alt_r {
            key-positions = <9 19>;
            bindings = <&kp LALT>;
        };

        combo_bkspc {
            key-positions = <30 31>;
            bindings = <&kp BSPC>;
        };

        combo_syslayer {
            key-positions = <30 33>;
            bindings = <&mo SYS>;
        };

        combo_fnlayer {
            key-positions = <32 29>;
            bindings = <&mo FNS>;
        };

        combo_esc {
            key-positions = <5 15>;
            bindings = <&kp ESC>;
        };

        combo_pg_dn {
            key-positions = <16 26>;
            bindings = <&kp PG_DN>;
        };

        combo_pg_up {
            key-positions = <17 27>;
            bindings = <&kp PG_UP>;
        };

        combo_home {
            key-positions = <10 20>;
            bindings = <&kp HOME>;
        };

        combo_end {
            key-positions = <14 24>;
            bindings = <&kp END>;
        };

        combo_tab {
            key-positions = <4 14>;
            bindings = <&kp TAB>;
        };

        combo_tmux_prefix {
            key-positions = <32 33>;
            bindings = <&kp LC(A)>;
        };

        // timeout-ms = <200>;
        // bindings = <&mo ACCENT>;
	};

	keymap {
		compatible = "zmk,keymap";

 /*           34 Keys
    ╭─────────────────────╮ ╭────────────────────╮
    │  q   w   f   p   b  │ │  j   l   u   y   ; │
    │  a   r   s   t   g  │ │  m   n   e   i   o │
    │  z   x   c   d   v  │ │  k   h   ,   .   / │
    ╰──────────╮   @   @  │ │  @   @   ╭─────────╯
               ╰──────────╯ ╰──────────╯            */

        base {
            display-name = "BASE";
            bindings = <
                &kp Q		    &kp W		    &kp F		    &kp P		    &kp B						&kp J		&kp L		    &kp U		    &kp Y		    &kp SEMI
                &mt LSHFT A		&mt LCTRL R		&mt LALT S		&mt LCMD T		&kp G						&kp M		&mt LCMD N		&mt LALT E		&mt LCTRL I		&mt LSHFT O
                &kp Z		    &kp X		    &kp C		    &kp D		    &kp V						&kp K		&kp H		    &kp COMMA	    &kp DOT		    &kp SLASH
                                                                &lt NAV TAB     &kp SPACE				    &kp RET		&lt SYM BSPC
                >;
        };

        nav {
            display-name = "NAV";
            bindings = <
                &kp N1		&kp N2		&kp N3		    &kp N4		&kp N5						    &kp N6		&kp	N7		&kp N8		&kp N9		&kp N0
                &caps_word	&none		&kp COMMA		&kp DOT		&none					        &kp LEFT	&kp DOWN	&kp UP		&kp RIGHT 	&none
                &kp LS(N1)	&kp LS(N2)	&kp LS(N3)	    &kp LS(N4)	&kp LS(N5)					    &kp LS(N6)	&kp	LS(N7)	&kp LS(N8)	&kp LS(N9)	&kp LS(N0)
                                                        &trans		&none						    &kp TAB		&kp LS(INS)
                >;
        };

        sym {
            display-name = "SYM";
            bindings = <
                &kp LS(N6)	&kp LBKT	&kp LS(N2)	&kp RBKT	    &kp STAR					    &kp NON_US_HASH	    &kp PLUS	&kp MINUS	&kp UNDER	&kp QMARK
                &kp LS(N4)	&kp LPAR	&kp SQT		&kp RPAR	    &kp	LS(N7)					    &kp LS(NON_US_HASH)	&kp LT	    &kp EQUAL	&kp GT 	    &kp LS(SQT)
                &kp LS(N5)	&kp	LBRC	&kp GRAVE	&kp RBRC	    &kp LS(NON_US_BSLH)			    &kp NON_US_BSLH	    &kp EXCL	&kp DOT	    &kp LS(N3)	&kp SLASH
                                                    &kp BSPC    	&kp DEL						    &none		        &trans
                >;
        };

		sys {
            display-name = "SYS";
            bindings = <
                &bt BT_SEL 0	&bt BT_SEL 1	&bt BT_SEL 2	&bt BT_SEL 3	&bt BT_SEL 4		&bt BT_PRV	    &none		&none		&none		    &bt BT_CLR
                &none		    &none		    &none		    &none		    &none				&bt BT_NXT		&none		&none		&none		    &none
                &sys_reset	    &bootloader		&none		    &none		    &none				&none		    &none		&none	    &bootloader		&sys_reset
                                                                &trans		    &none				&none	    	&trans
                >;
        };

        fns {
            display-name = "FNS";
            bindings = <
                &kp F1		&kp F2		&kp F3		&kp F4		&kp F5						        &none		&none		&none		&none		&none
                &kp F6		&kp F7		&kp F8		&kp F9		&kp F10						        &none		&none		&none		&none		&none
                &kp F11		&kp F12		&none		&none		&none						        &none		&none		&none		&none		&none
                                                    &none		&none						        &none		&none
                >;
        };

	};
};